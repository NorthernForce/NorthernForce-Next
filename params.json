{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"NorthernForce Next\r\n====\r\n\r\nThe next generation base code for FIRST Team 172.\r\n\r\nThe hope with this codebase is to provide a solid foundation for all future robots that are based on C++, and to provide work to be done during the pre-season. The hope is that this base is done as soon as the regular season comes around, so that we can focus on doing other tasks aside from getting the robot moving during the season, such as game specific functions.\r\n\r\nPrefixes\r\n---\r\nThe code will contain certain prefixes to help discern which kinds of things the variables are. Here are the different types of prefixes that will be found in the code, and what they mean.\r\n- **k**Variable - The **k** in front of a variable will mean that this variable is a constant. These should all be defined within Robotmap.h.\r\n- **s**Variable - The **s** in front of a variable will mean that this variable is a subsystem. Subsystems are defined within their own class files, and the variables to access them are defined within CommandBase.\r\n- **o**Variable - The **o** in front of a variable will mean that this variable is an operator interface element. These are defined within the OI class.\r\n\r\nDocumentation:\r\n-----------------\r\nPlease make sure to document all of your classes. Provide the author of the subclass, what the class does, what it takes as parameters, and what the class returns.\r\n\r\nExample:\r\n\r\n\t/**\r\n\t * @brief This class does a, b, and c.\r\n\t *\r\n\t * @param x An int of some amount.\r\n\t * @param y A string of some value.\r\n\t * @param z A bool of some value.\r\n\t *\r\n\t * @return A boolean of fail or pass.\r\n\t *\r\n\t * @author John Smith\r\n\t **/\r\n\r\nNaming:\r\n-----------------\r\nAll classes should be named with capital letters, in camel case.\r\n\r\nExample: \r\n\r\n\tclass ExampleClass\r\n\tclass ExampleClassExtensionThree\r\n\t\r\nAll methods should be named along the same parameters.\r\n\r\nExample:\r\n\r\n\tvoid ExampleClass::ExampleMethod\r\n\tvoid ExampleClass::ExampleMethodNumberFour\r\n\t\r\nIntentation:\r\n-----------------\r\nPlease make sure that your code is properly indented. **This makes it much easier for everyone to read and make sense of.**\r\n\r\nBraces:\r\n-----------------\r\nBraces should be separated from the line that their method is on. It makes the\r\ncode much easier to read, especially with more complex class definitions.\r\n\r\nExample:\r\n\r\n\tvoid MyClass::MyMethod() \r\n\t{\r\n\t\t// Code Here.\r\n\t}\r\n\r\nExample 2:\r\n\r\n\tCommandBasedRobot(void):\r\n\t\to_driveStick (1, 6, 10),\r\n\t\to_driverStation (*DriverStation::GetInstance())\r\n\t{\r\n\t\tCommandBase::init();\r\n\t}\r\n\r\n\r\n","name":"Next","tagline":"The next generation base code for FIRST Team 172."}